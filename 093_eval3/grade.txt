Grading at 12/04/2022:06:10:39.920317
For commit ID 2c3f9ba4af2b50df95f01cf7bd08c4e4e7f73e59
Grading at Sun Dec  4 01:09:31 AM EST 2022
Doing some basic checking for your submission

Step 1
Checking that cyoa-step1 compiles
rm -f *~ cyoa-step4  cyoa-step3 cyoa-step2  cyoa-step1 cyoa-step4.o cyoa-step3.o cyoa-step2.o cyoa-step1.o page.o story.o
g++  -c page.cpp
g++  -c story.cpp
g++  -c cyoa-step1.cpp
g++ -o cyoa-step1 cyoa-step1.o page.o story.o
rm cyoa-step1.o
The code compiled (good)
Executable cyoa-step1 exists (good)
------------------------------------
Now running YOUR tests for step 1
------------------------------------


1.1: Current test is ./cyoa-step1 story1 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


1.2: Current test is ./cyoa-step1 story2 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 1

Step 2
Checking that cyoa-step2 compiles
rm -f *~ cyoa-step4  cyoa-step3 cyoa-step2  cyoa-step1 cyoa-step4.o cyoa-step3.o cyoa-step2.o cyoa-step1.o page.o story.o
g++  -c page.cpp
g++  -c story.cpp
g++  -c cyoa-step2.cpp
g++ -o cyoa-step2 cyoa-step2.o page.o story.o
rm cyoa-step2.o
The code compiled (good)
Executable cyoa-step2 exists (good)
------------------------------------
Now running YOUR tests for step 2
------------------------------------


2.1: Current test is ./cyoa-step2 story1  <  story1/inputs/input0.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.2: Current test is ./cyoa-step2 story1  <  story1/inputs/input1.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.3: Current test is ./cyoa-step2 story1  <  story1/inputs/input2.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.4: Current test is ./cyoa-step2 story1  <  story1/inputs/input3.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.5: Current test is ./cyoa-step2 story1  <  story1/inputs/input4.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.6: Current test is ./cyoa-step2 story1  <  story1/inputs/input5.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.7: Current test is ./cyoa-step2 story1  <  story1/inputs/input6.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.8: Current test is ./cyoa-step2 story1  <  story1/inputs/input7.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.9: Current test is ./cyoa-step2 story1  <  story1/inputs/input8.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.10: Current test is ./cyoa-step2 story1  <  story1/inputs/input9.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.11: Current test is ./cyoa-step2 story1  <  story1/inputs/input10.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.12: Current test is ./cyoa-step2 story1  <  story1/inputs/input11.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.13: Current test is ./cyoa-step2 story1  <  story1/inputs/input12.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 2

Step 3
Checking that cyoa-step3 compiles
rm -f *~ cyoa-step4  cyoa-step3 cyoa-step2  cyoa-step1 cyoa-step4.o cyoa-step3.o cyoa-step2.o cyoa-step1.o page.o story.o
g++  -c page.cpp
g++  -c story.cpp
g++  -c cyoa-step3.cpp
g++ -o cyoa-step3 cyoa-step3.o page.o story.o
rm cyoa-step3.o
The code compiled (good)
Executable cyoa-step3 exists (good)
------------------------------------
Now running YOUR tests for step 3
------------------------------------


3.1: Current test is ./cyoa-step3 story1 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


3.2: Current test is ./cyoa-step3 story2 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 3

Step 4
Checking that cyoa-step4 compiles
rm -f *~ cyoa-step4  cyoa-step3 cyoa-step2  cyoa-step1 cyoa-step4.o cyoa-step3.o cyoa-step2.o cyoa-step1.o page.o story.o
g++  -c page.cpp
g++  -c story.cpp
g++  -c cyoa-step4.cpp
g++ -o cyoa-step4 cyoa-step4.o page.o story.o
rm cyoa-step4.o
The code compiled (good)
Executable cyoa-step4 exists (good)
------------------------------------
Now running YOUR tests for step 4
------------------------------------


4.1: Current test is ./cyoa-step4 story3  <  story3/inputs/input100.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.2: Current test is ./cyoa-step4 story3  <  story3/inputs/input0.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.3: Current test is ./cyoa-step4 story3  <  story3/inputs/input1.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.4: Current test is ./cyoa-step4 story3  <  story3/inputs/input2.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1970123== Memcheck, a memory error detector
==1970123== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1970123== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1970123== Command: ./cyoa-step4 story3
==1970123== Parent PID: 1970122
==1970123== 


4.5: Current test is ./cyoa-step4 story3  <  story3/inputs/input3.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.6: Current test is ./cyoa-step4 story3  <  story3/inputs/input4.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.7: Current test is ./cyoa-step4 story3  <  story3/inputs/input5.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.8: Current test is ./cyoa-step4 story3  <  story3/inputs/input6.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.9: Current test is ./cyoa-step4 story3  <  story3/inputs/input7.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.10: Current test is ./cyoa-step4 story3  <  story3/inputs/input8.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.11: Current test is ./cyoa-step4 story3  <  story3/inputs/input9.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.12: Current test is ./cyoa-step4 story3  <  story3/inputs/input10.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.13: Current test is ./cyoa-step4 story3  <  story3/inputs/input11.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1970402== Memcheck, a memory error detector
==1970402== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1970402== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1970402== Command: ./cyoa-step4 story3
==1970402== Parent PID: 1970401
==1970402== 


4.14: Current test is ./cyoa-step4 story3  <  story3/inputs/input12.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.15: Current test is ./cyoa-step4 story3  <  story3/inputs/input13.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1970478== Memcheck, a memory error detector
==1970478== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1970478== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1970478== Command: ./cyoa-step4 story3
==1970478== Parent PID: 1970477
==1970478== 


4.16: Current test is ./cyoa-step4 story3  <  story3/inputs/input14.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.17: Current test is ./cyoa-step4 story3  <  story3/inputs/input15.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.18: Current test is ./cyoa-step4 story3  <  story3/inputs/input16.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.19: Current test is ./cyoa-step4 story3  <  story3/inputs/input17.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.20: Current test is ./cyoa-step4 story3  <  story3/inputs/input18.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.21: Current test is ./cyoa-step4 story3  <  story3/inputs/input19.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.22: Current test is ./cyoa-step4 story3  <  story3/inputs/input20.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.23: Current test is ./cyoa-step4 story3  <  story3/inputs/input21.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.24: Current test is ./cyoa-step4 story3  <  story3/inputs/input22.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.25: Current test is ./cyoa-step4 story3  <  story3/inputs/input23.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.26: Current test is ./cyoa-step4 story3  <  story3/inputs/input24.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 4

You have NOT passed your test cases!
You should go and figure out/understand where thing went wrong
And fix the problem(s) before the deadline

Overall Grade: NO GRADE YET
