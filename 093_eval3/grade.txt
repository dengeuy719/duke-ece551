Grading at 12/04/2022:03:05:05.331668
For commit ID 4ede5b3a07b2bf69b0e72ed049118072d903593e
Grading at Sat Dec  3 10:03:36 PM EST 2022
Doing some basic checking for your submission

Step 1
Checking that cyoa-step1 compiles
rm -f *~ cyoa-step4   cyoa-step4.o page.o story.o
g++  -c page.cpp
g++  -c story.cpp
g++  -c cyoa-step1.cpp
g++ -o cyoa-step1 cyoa-step1.o page.o story.o
rm cyoa-step1.o
The code compiled (good)
Executable cyoa-step1 exists (good)
------------------------------------
Now running YOUR tests for step 1
------------------------------------


1.1: Current test is ./cyoa-step1 story1 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


1.2: Current test is ./cyoa-step1 story2 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 1

Step 2
Checking that cyoa-step2 compiles
rm -f *~ cyoa-step4   cyoa-step4.o page.o story.o
g++  -c page.cpp
g++  -c story.cpp
g++  -c cyoa-step2.cpp
g++ -o cyoa-step2 cyoa-step2.o page.o story.o
rm cyoa-step2.o
The code compiled (good)
Executable cyoa-step2 exists (good)
------------------------------------
Now running YOUR tests for step 2
------------------------------------


2.1: Current test is ./cyoa-step2 story1  <  story1/inputs/input0.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.2: Current test is ./cyoa-step2 story1  <  story1/inputs/input1.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.3: Current test is ./cyoa-step2 story1  <  story1/inputs/input2.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.4: Current test is ./cyoa-step2 story1  <  story1/inputs/input3.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.5: Current test is ./cyoa-step2 story1  <  story1/inputs/input4.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.6: Current test is ./cyoa-step2 story1  <  story1/inputs/input5.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.7: Current test is ./cyoa-step2 story1  <  story1/inputs/input6.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.8: Current test is ./cyoa-step2 story1  <  story1/inputs/input7.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.9: Current test is ./cyoa-step2 story1  <  story1/inputs/input8.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.10: Current test is ./cyoa-step2 story1  <  story1/inputs/input9.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.11: Current test is ./cyoa-step2 story1  <  story1/inputs/input10.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.12: Current test is ./cyoa-step2 story1  <  story1/inputs/input11.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


2.13: Current test is ./cyoa-step2 story1  <  story1/inputs/input12.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 2

Step 3
Checking that cyoa-step3 compiles
rm -f *~ cyoa-step4   cyoa-step4.o page.o story.o
g++  -c page.cpp
g++  -c story.cpp
g++  -c cyoa-step3.cpp
g++ -o cyoa-step3 cyoa-step3.o page.o story.o
rm cyoa-step3.o
The code compiled (good)
Executable cyoa-step3 exists (good)
------------------------------------
Now running YOUR tests for step 3
------------------------------------


3.1: Current test is ./cyoa-step3 story1 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


3.2: Current test is ./cyoa-step3 story2 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


3.3: Current test is ./cyoa-step3 story3 < /dev/null
-----------------------------
It looks like you got different output from us on that case.
Here is the diff (yours on left, ours on right):

0(1),1(1),4(1),5(1),8(1),10(win)				0(1),1(1),4(1),5(1),8(1),10(win)
0(1),1(1),4(1),5(1),8(6),12(win)				0(1),1(1),4(1),5(1),8(6),12(win)
0(1),1(1),4(1),5(1),8(7),13(2),17(win)				0(1),1(1),4(1),5(1),8(7),13(2),17(win)
0(1),1(1),4(1),5(1),8(7),13(4),19(win)				0(1),1(1),4(1),5(1),8(7),13(4),19(win)
0(1),1(1),4(1),5(1),8(9),15(2),21(win)				0(1),1(1),4(1),5(1),8(9),15(2),21(win)
0(1),1(1),4(1),5(1),8(9),15(3),22(win)				0(1),1(1),4(1),5(1),8(9),15(3),22(win)
							      >	0(1),1(1),4(2),6(1),7(1),5(1),8(1),10(win)
							      >	0(1),1(1),4(2),6(1),7(1),5(1),8(6),12(win)
							      >	0(1),1(1),4(2),6(1),7(1),5(1),8(7),13(2),17(win)
							      >	0(1),1(1),4(2),6(1),7(1),5(1),8(7),13(4),19(win)
							      >	0(1),1(1),4(2),6(1),7(1),5(1),8(9),15(2),21(win)
							      >	0(1),1(1),4(2),6(1),7(1),5(1),8(9),15(3),22(win)
							      >	0(1),1(1),4(2),6(2),5(1),8(1),10(win)
							      >	0(1),1(1),4(2),6(2),5(1),8(6),12(win)
							      >	0(1),1(1),4(2),6(2),5(1),8(7),13(2),17(win)
							      >	0(1),1(1),4(2),6(2),5(1),8(7),13(4),19(win)
							      >	0(1),1(1),4(2),6(2),5(1),8(9),15(2),21(win)
							      >	0(1),1(1),4(2),6(2),5(1),8(9),15(3),22(win)
							      >	0(2),2(1),4(1),5(1),8(1),10(win)
							      >	0(2),2(1),4(1),5(1),8(6),12(win)
							      >	0(2),2(1),4(1),5(1),8(7),13(2),17(win)
							      >	0(2),2(1),4(1),5(1),8(7),13(4),19(win)
							      >	0(2),2(1),4(1),5(1),8(9),15(2),21(win)
							      >	0(2),2(1),4(1),5(1),8(9),15(3),22(win)
							      >	0(2),2(1),4(2),6(1),7(1),5(1),8(1),10(win)
							      >	0(2),2(1),4(2),6(1),7(1),5(1),8(6),12(win)
							      >	0(2),2(1),4(2),6(1),7(1),5(1),8(7),13(2),17(win)
							      >	0(2),2(1),4(2),6(1),7(1),5(1),8(7),13(4),19(win)
							      >	0(2),2(1),4(2),6(1),7(1),5(1),8(9),15(2),21(win)
							      >	0(2),2(1),4(2),6(1),7(1),5(1),8(9),15(3),22(win)
							      >	0(2),2(1),4(2),6(2),5(1),8(1),10(win)
							      >	0(2),2(1),4(2),6(2),5(1),8(6),12(win)
							      >	0(2),2(1),4(2),6(2),5(1),8(7),13(2),17(win)
							      >	0(2),2(1),4(2),6(2),5(1),8(7),13(4),19(win)
							      >	0(2),2(1),4(2),6(2),5(1),8(9),15(2),21(win)
							      >	0(2),2(1),4(2),6(2),5(1),8(9),15(3),22(win)
							      >	0(3),3(1),4(1),5(1),8(1),10(win)
							      >	0(3),3(1),4(1),5(1),8(6),12(win)
							      >	0(3),3(1),4(1),5(1),8(7),13(2),17(win)
							      >	0(3),3(1),4(1),5(1),8(7),13(4),19(win)
							      >	0(3),3(1),4(1),5(1),8(9),15(2),21(win)
							      >	0(3),3(1),4(1),5(1),8(9),15(3),22(win)
							      >	0(3),3(1),4(2),6(1),7(1),5(1),8(1),10(win)
							      >	0(3),3(1),4(2),6(1),7(1),5(1),8(6),12(win)
							      >	0(3),3(1),4(2),6(1),7(1),5(1),8(7),13(2),17(win)
							      >	0(3),3(1),4(2),6(1),7(1),5(1),8(7),13(4),19(win)
							      >	0(3),3(1),4(2),6(1),7(1),5(1),8(9),15(2),21(win)
							      >	0(3),3(1),4(2),6(1),7(1),5(1),8(9),15(3),22(win)
							      >	0(3),3(1),4(2),6(2),5(1),8(1),10(win)
							      >	0(3),3(1),4(2),6(2),5(1),8(6),12(win)
							      >	0(3),3(1),4(2),6(2),5(1),8(7),13(2),17(win)
							      >	0(3),3(1),4(2),6(2),5(1),8(7),13(4),19(win)
							      >	0(3),3(1),4(2),6(2),5(1),8(9),15(2),21(win)
							      >	0(3),3(1),4(2),6(2),5(1),8(9),15(3),22(win)
Your file did not match the expected output

No request to check for intermediate deadline completion on step 3

Step 4
Checking that cyoa-step4 compiles
rm -f *~ cyoa-step4   cyoa-step4.o page.o story.o
g++  -c page.cpp
g++  -c story.cpp
g++  -c cyoa-step4.cpp
g++ -o cyoa-step4 cyoa-step4.o page.o story.o
rm cyoa-step4.o
The code compiled (good)
Executable cyoa-step4 exists (good)
------------------------------------
Now running YOUR tests for step 4
------------------------------------


4.1: Current test is ./cyoa-step4 story3  <  story3/inputs/input100.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.2: Current test is ./cyoa-step4 story3  <  story3/inputs/input0.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.3: Current test is ./cyoa-step4 story3  <  story3/inputs/input1.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.4: Current test is ./cyoa-step4 story3  <  story3/inputs/input2.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.5: Current test is ./cyoa-step4 story3  <  story3/inputs/input3.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1875499== Memcheck, a memory error detector
==1875499== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1875499== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1875499== Command: ./cyoa-step4 story3
==1875499== Parent PID: 1875498
==1875499== 


4.6: Current test is ./cyoa-step4 story3  <  story3/inputs/input4.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.7: Current test is ./cyoa-step4 story3  <  story3/inputs/input5.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.8: Current test is ./cyoa-step4 story3  <  story3/inputs/input6.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.9: Current test is ./cyoa-step4 story3  <  story3/inputs/input7.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.10: Current test is ./cyoa-step4 story3  <  story3/inputs/input8.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.11: Current test is ./cyoa-step4 story3  <  story3/inputs/input9.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1875760== Memcheck, a memory error detector
==1875760== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1875760== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1875760== Command: ./cyoa-step4 story3
==1875760== Parent PID: 1875759
==1875760== 


4.12: Current test is ./cyoa-step4 story3  <  story3/inputs/input10.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.13: Current test is ./cyoa-step4 story3  <  story3/inputs/input11.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.14: Current test is ./cyoa-step4 story3  <  story3/inputs/input12.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1875867== Memcheck, a memory error detector
==1875867== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1875867== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1875867== Command: ./cyoa-step4 story3
==1875867== Parent PID: 1875866
==1875867== 


4.15: Current test is ./cyoa-step4 story3  <  story3/inputs/input13.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1875946== Memcheck, a memory error detector
==1875946== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1875946== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1875946== Command: ./cyoa-step4 story3
==1875946== Parent PID: 1875945
==1875946== 


4.16: Current test is ./cyoa-step4 story3  <  story3/inputs/input14.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.17: Current test is ./cyoa-step4 story3  <  story3/inputs/input15.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.18: Current test is ./cyoa-step4 story3  <  story3/inputs/input16.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.19: Current test is ./cyoa-step4 story3  <  story3/inputs/input17.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.20: Current test is ./cyoa-step4 story3  <  story3/inputs/input18.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.21: Current test is ./cyoa-step4 story3  <  story3/inputs/input19.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1876207== Memcheck, a memory error detector
==1876207== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1876207== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1876207== Command: ./cyoa-step4 story3
==1876207== Parent PID: 1876206
==1876207== 


4.22: Current test is ./cyoa-step4 story3  <  story3/inputs/input20.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.23: Current test is ./cyoa-step4 story3  <  story3/inputs/input21.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.24: Current test is ./cyoa-step4 story3  <  story3/inputs/input22.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean


4.25: Current test is ./cyoa-step4 story3  <  story3/inputs/input23.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1876351== Memcheck, a memory error detector
==1876351== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1876351== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1876351== Command: ./cyoa-step4 story3
==1876351== Parent PID: 1876350
==1876351== 


4.26: Current test is ./cyoa-step4 story3  <  story3/inputs/input24.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean
No request to check for intermediate deadline completion on step 4

You have NOT passed your test cases!
You should go and figure out/understand where thing went wrong
And fix the problem(s) before the deadline

Overall Grade: NO GRADE YET
